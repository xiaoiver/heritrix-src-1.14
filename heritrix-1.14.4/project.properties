# Xdoc configuration
#
maven.xdoc.date=left
maven.xdoc.version=${pom.currentVersion}
maven.docs.outputencoding=UTF-8
maven.source.encoding=UTF-8
maven.compile.encoding=UTF-8

# Tell maven that we're JVM 1.5 exclusively.
maven.compile.source = 1.5
maven.compile.target = 1.5
maven.javadoc.source = 1.5
maven.test.source = 1.5

# Tell maven we want to be able to favor locally installed jars rather
# than pull all from remote repositories.  Then, point at our local 
# versions of jars.  These will be used when maven checks dependencies.
# Maven won't try pulling the below listed jars from the remote repo.
maven.jar.override = on
maven.jar.commons-httpclient-local = ${basedir}/lib/commons-httpclient-3.1.jar
maven.jar.commons-io-local = ${basedir}/lib/commons-io-1.3.1.jar
maven.jar.commons-logging-local = ${basedir}/lib/commons-logging-1.0.4.jar
maven.jar.commons-codec = ${basedir}/lib/commons-codec-1.3.jar
maven.jar.commons-lang-local = ${basedir}/lib/commons-lang-2.3.jar
maven.jar.commons-net-local = ${basedir}/lib/commons-net-2.0.jar
maven.jar.commons-pool = ${basedir}/lib/commons-pool-1.3.jar
maven.jar.commons-collections-local = ${basedir}/lib/commons-collections-3.1.jar
maven.jar.commons-cli = ${basedir}/lib/commons-cli-1.0.jar
maven.jar.servlet = ${basedir}/lib/servlet-tomcat-4.1.30.jar
maven.jar.dnsjava = ${basedir}/lib/dnsjava-2.0.3.jar
maven.jar.javaswf = ${basedir}/lib/javaswf-CVS-SNAPSHOT-1.jar
maven.jar.itext = ${basedir}/lib/itext-1.2.0.jar
maven.jar.ant-local = ${basedir}/lib/ant-1.6.2.jar
maven.jar.jasper-runtime = ${basedir}/lib/jasper-runtime-tomcat-4.1.30.jar
maven.jar.jasper-compiler = ${basedir}/lib/jasper-compiler-tomcat-4.1.30.jar
maven.jar.poi = ${basedir}/lib/poi-2.0-RC1-20031102.jar
maven.jar.poi-scratchpad = ${basedir}/lib/poi-scratchpad-2.0-RC1-20031102.jar
maven.jar.jetty = ${basedir}/lib/jetty-4.2.23.jar
maven.jar.junit-local = ${basedir}/lib/junit-3.8.2.jar
maven.jar.je = ${basedir}/lib/je-3.3.82.jar 
maven.jar.fastutil-local = ${basedir}/lib/fastutil-5.0.3-heritrix-subset-1.0.jar
maven.jar.mg4j-local = ${basedir}/lib/mg4j-1.0.1.jar
maven.jar.libidn = ${basedir}/lib/libidn-0.5.9.jar
maven.jar.beanshell = ${basedir}/lib/bsh-2.0b4.jar
maven.jar.jericho-html = ${basedir}/lib/jericho-html-2.6.jar
maven.jar.jets3t = ${basedir}/lib/jets3t-0.5.0.jar
maven.jar.joda-time = ${basedir}/lib/joda-time-1.6.jar

# Below directives have to do w/ the MANIFEST-MF that gets generated by Maven.
# The second points to a MANIFEST-MF addendum in which we have a the Main and
# a Class-Path listing all jars.  This Class-Path is needed so you can run 
# 'java -jar heritrix.jar'.
maven.jar.manifest.extensions.add = false
maven.jar.mainclass = org.archive.crawler.Heritrix
maven.jar.manifest = ${basedir}/src/java/META-INF/MANIFEST-MF

# Junit properties
maven.junit.fork = Yes
maven.junit.jvmargs = -ea
maven.junit.sysproperties = testtmpdir
testtmpdir = ${maven.build.dir}/test-tmp

# WAR properties.
maven.war.src = ${basedir}/src/webapps/admin/
maven.war.webxml = ${basedir}/src/webapps/admin/WEB-INF/web.xml
maven.war.index = true

# Sdocbook properties
# See http://docbook.sourceforge.net/release/xsl/current/doc/html/index.html
# for list of possible PARAMs.
maven.sdocbook.src.dir = ${basedir}/src/articles
maven.sdocbook.target.dir = ${maven.build.dir}/docs/articles
maven.sdocbook.html.xsl=${maven.sdocbook.stylesheets.dir}/html/chunk.xsl
maven.sdocbook.resources.include = **/*.gif,**/*.png,**/*.css
maven.sdocbook.html.params = -PARAM generate.id.attributes 1 -PARAM section.autolabel 1 -PARAM part.autolabel 1 -PARAM chapter.autolabel 1 -PARAM generate.meta.abstract 1 -PARAM chunk.section.depth 1 -PARAM chunk.first.sections 1 -PARAM css.decoration 1 -PARAM html.stylesheet ../docbook.css -PARAM use.id.as.filename 1
maven.sdocbook.fo.params = -PARAM generate.id.attributes 1 -PARAM section.autolabel 1 -PARAM part.autolabel 1 -PARAM chapter.autolabel 1 -PARAM generate.meta.abstract 1

# Supply javadoc properties.
# Normally don't have to but we're overriding the default javadoc behavior
maven.javadoc.author = true
maven.javadoc.destdir = ${maven.docs.dest}/apidocs
#maven.javadoc.docletpath=
#maven.javadoc.doclet=
maven.javadoc.links = http://java.sun.com/j2se/1.5.0/docs/api
#maven.javadoc.maxmemory
maven.javadoc.public = false
maven.javadoc.package = true
maven.javadoc.private = false
maven.javadoc.use = true
maven.javadoc.version = true
maven.javadoc.useexternalfile = no
maven.javadoc.windowtitle = ${pom.name} ${pom.currentVersion} 

# Enable below if the findbugs plugin is installed.  Go to here for the plugin:
# http://maven-plugins.sourceforge.net/maven-findbugs-plugin/project-info.html
# maven.findbugs.enable = true

# EAR properties.
# maven.ear.src=${basedir}/src/ear

# So we download from maven1 repository.
maven.repo.remote=http://repo1.maven.org/maven,http://repository.sonatype.org/content/repositories/centralm1
